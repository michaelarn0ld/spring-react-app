# LOCALHOST
@host=http://localhost:8081

# LOAD BALANCER
# @host=http://pete-lb-461189805.us-east-2.elb.amazonaws.com:8081

# TOKEN
@jwt=eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJ1c2VyLXNlcnZpY2UiLCJzdWIiOiJtaWNoYWVsYXJuMGxkIiwiaWQiOjEsImF1dGhvcml0aWVzIjoiVVNFUixBRE1JTiIsImV4cCI6MTY0NjIwMjEyMn0.0464BMsXEL7Wy3F2z578Zy4X3dmiI7kiFqfqVu-l5ZM

###
# get reservables for weight room
GET {{host}}/1

###
# get reservables for pool
GET {{host}}/2

###
# get reservables for track
GET {{host}}/3

###
# Get available reservable times for a given date: not protected
GET {{host}}/1/1?date=2022-02-22

###
# A user can make a reservation: protected
POST {{host}}/1/1
Content-Type: application/json
Authorization: Bearer {{jwt}}

{
    "appUserId": 1,
    "reservable": {
        "id": 1
    },
    "facility": {
        "id": 1
    },
    "startTime": "2022-03-25T08:00:00",
    "endTime": "2022-03-25T09:00:00"
}

###
# /facilityId/reservableId should match request body: this returns a 400
POST {{host}}/1/1
Content-Type: application/json
Authorization: Bearer {{jwt}}

{
    "appUserId": 1,
    "reservable": {
        "id": 3
    },
    "facility": {
        "id": 2
    },
    "startTime": "2022-03-25T08:00:00",
    "endTime": "2022-03-25T09:00:00"
}

###
# Cannot make a reservation if no equipment is available at the specified time!: returns a 400
POST {{host}}/1/2
Content-Type: application/json
Authorization: Bearer {{jwt}}

{
    "appUserId": 1,
    "reservable": {
        "id": 2
    },
    "facility": {
        "id": 1
    },
    "startTime": "2022-02-22T08:00:00",
    "endTime": "2022-02-22T09:00:00"
}

###
# creating a reservation requires a valid token: this returns a 403
POST {{host}}/1/1
Content-Type: application/json
Authorization: Bearer thisisabadtoken

{
    "appUserId": 1,
    "reservable": {
        "id": 1
    },
    "facility": {
        "id": 1
    },
    "startTime": "2022-03-25T08:00:00",
    "endTime": "2022-03-25T09:00:00"
}

###
# A user can get a list of their future reservations
GET {{host}}/reservations/1
Authorization: Bearer {{jwt}}

###
# A user cannot get a list of another users reservations: returns a 400
# ensure jwt corresponds to user michaelarn0ld (id = 1)
GET {{host}}/reservations/2
Authorization: Bearer {{jwt}}

###
# A user can delete their own reservations
DELETE {{host}}/reservations/1/8
Authorization: Bearer {{jwt}}

###
# A user cannot delete another users reservations: returns a 403
# ensure jwt corresponds to user michaelarn0ld (id = 1)
DELETE {{host}}/reservations/2/3
Authorization: Bearer {{jwt}}

###
# A user cannot delete another users reservations, even if /appUserId matches token: returns a 404
# ensure jwt corresponds to user michaelarn0ld (id = 1)
DELETE {{host}}/reservations/1/3
Authorization: Bearer {{jwt}}