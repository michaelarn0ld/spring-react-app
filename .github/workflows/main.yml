name: CI/CD

on:
  push:
    branches:
      - "main"

env:
  AWS_REGION: us-east-2
  ECR_REGISTRY: pete-ecr-repo
  ECS_CLUSTER: pete-cluster
  # user
  USER_SERVICE: pete-user-service
  USER_TASK_DEFINITION: ./service/user-service/task-definition.json
  USER_CONTAINER_NAME: pete-user-container
  USER_IMAGE: ${{secrets.DOCKERHUB_USERNAME}}/capstone_user-service:latest
  # # facility
  # FACILITY_SERVICE: pete-facility-service
  # FACILITY_TASK_DEFINITION: ./service/facility-service/task-definition.json
  # FACILITY_CONTAINER_NAME: pete-facility-container
  # FACILITY_IMAGE: ${{secrets.DOCKERHUB_USERNAME}}/capstone_facility-service:latest
  # # ui
  # UI_SERVICE: pete-ui-service
  # UI_TASK_DEFINITION: ./ui/task-definition.json
  # UI_CONTAINER_NAME: pete-ui-container
  # UI_IMAGE: ${{secrets.DOCKERHUB_USERNAME}}/capstone_ui:latest

jobs:
  user-service:
    runs-on: ubuntu-latest
    steps:
      # checkout repo
      - name: checkout
        uses: actions/checkout@v2

      # build & push to dockerhub
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: login to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: build & push to dockerhub
        uses: docker/build-push-action@v2
        with:
          context: ./service/user-service
          push: true
          tags: ${{env.USER_IMAGE}}

      # deploy to Amazon ECS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{USER_IMAGE}}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: ui-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
        with:
          task-definition: ${{env.USER_TASK_DEFINITION}}
          container-name: ${{env.USER_CONTAINER_NAME}}
          image: ${{env.USER_IMAGE}}

  # facility-service:
  #   runs-on: ubuntu-latest

  #   needs: user-service

  #   steps:
  #     # checkout repo
  #     - name: checkout
  #       uses: actions/checkout@v2

  #     # build & push to dockerhub
  #     - name: set up docker buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: login to dockerhub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{secrets.DOCKERHUB_USERNAME}}
  #         password: ${{secrets.DOCKERHUB_TOKEN}}

  #     - name: build & push to dockerhub
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./service/facility-service
  #         push: true
  #         tags: ${{FACILITY_IMAGE}}

  #     # deploy to Amazon ECS
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
  #       with:
  #         aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
  #         aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  #         aws-region: ${{env.AWS_REGION}}

  #     - name: Fill in the new image ID in the Amazon ECS task definition
  #       id: ui-task-def
  #       uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
  #       with:
  #         task-definition: ${{env.FACILITY_TASK_DEFINITION}}
  #         container-name: ${{env.FACILITY_CONTAINER_NAME}}
  #         image: ${{FACILITY_IMAGE}}

  # ui:
  #   runs-on: ubuntu-latest

  #   needs:
  #     - user-service
  #     - facility-service

  #   steps:
  #     # checkout repo
  #     - name: checkout
  #       uses: actions/checkout@v2

  #     # build & push to dockerhub
  #     - name: set up docker buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: login to dockerhub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{secrets.DOCKERHUB_USERNAME}}
  #         password: ${{secrets.DOCKERHUB_TOKEN}}

  #     - name: build & push image to dockerhub
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./ui
  #         push: true
  #         tags: ${{UI_IMAGE}}

  #     # deploy to Amazon ECS
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
  #       with:
  #         aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
  #         aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  #         aws-region: ${{env.AWS_REGION}}

  #     - name: Fill in the new image ID in the Amazon ECS task definition
  #       id: ui-task-def
  #       uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
  #       with:
  #         task-definition: ${{env.UI_TASK_DEFINITION}}
  #         container-name: ${{env.UI_CONTAINER_NAME}}
  #         image: ${{UI_IMAGE}}
